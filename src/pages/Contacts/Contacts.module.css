@charset "UTF-8";
:root {
  --orbit-translate: 150px;
}

@media screen and (min-width: 220px) {
  .mainBox {
    overflow: hidden;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    height: 100%;
    width: 100vw;
  }
  .mainBox .circleBox {
    width: 100%;
    height: 100%;
    -webkit-transform: scale(0.8, 1);
            transform: scale(0.8, 1);
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    /*при наведении на фигуру*/
  }
  .mainBox .circleBox .circle {
    background: var(--backgroundPlanets);
    border-radius: 50%;
    height: 100px;
    width: 100px;
    -webkit-transition: all 0.6s ease;
    transition: all 0.6s ease;
    margin-bottom: 0px;
  }
  .mainBox .circleBox .circle1,
  .mainBox .circleBox .circle2,
  .mainBox .circleBox .circle3 {
    background: var(--backgroundPlanets);
    border-radius: 50%;
    height: 60px;
    width: 60px;
    -webkit-transition: all 0.3s ease;
    transition: all 0.3s ease;
    position: absolute;
    margin: 9%;
    -webkit-transform: rotateX(-90deg) translateZ(100px) rotate(180deg);
            transform: rotateX(-90deg) translateZ(100px) rotate(180deg);
    z-index: 10;
  }
  .mainBox .circleBox .circle:hover,
  .mainBox .circleBox .circle1:hover,
  .mainBox .circleBox .circle2:hover,
  .mainBox .circleBox .circle3:hover {
    -webkit-box-shadow: inset var(--colorContactsShadow) 0 0 40px 10px, var(--colorContactsShadow) 0 0 24px 12px;
            box-shadow: inset var(--colorContactsShadow) 0 0 40px 10px, var(--colorContactsShadow) 0 0 24px 12px;
  }
  .mainBox .circleBox .donut {
    position: absolute;
    border: 1px solid #F0FFFF;
    border-radius: 50%;
    -webkit-box-shadow: inset var(--colorContactsShadow) 0 0 20px 5px, var(--colorContactsShadow) 0 0 22px 7px;
            box-shadow: inset var(--colorContactsShadow) 0 0 20px 5px, var(--colorContactsShadow) 0 0 22px 7px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    aspect-ratio: 1/2;
  }
  .mainBox .circleBox .orbit1 {
    position: absolute;
    right: 33%;
    left: 33%;
    top: 33%;
    bottom: 33%;
    -webkit-animation: Orbita 15s linear infinite;
            animation: Orbita 15s linear infinite;
  }
  .mainBox .circleBox .orbit2 {
    position: absolute;
    right: 33%;
    left: 39%;
    top: 29%;
    bottom: 33%;
    -webkit-animation: Orbita2 15s linear infinite;
            animation: Orbita2 15s linear infinite;
  }
  .mainBox .circleBox .orbit3 {
    position: absolute;
    right: 33%;
    left: 33%;
    top: 33%;
    bottom: 33%;
    -webkit-animation: Orbita3 15s linear infinite;
            animation: Orbita3 15s linear infinite;
    aspect-ratio: 1/2;
  }
  .mainBox .circleBox .orbit1:hover,
  .mainBox .circleBox .orbit2:hover,
  .mainBox .circleBox .orbit3:hover {
    -webkit-animation-play-state: paused;
            animation-play-state: paused;
  }
}

@media screen and (min-width: 468px) {
  .mainBox .circleBox {
    -webkit-transform: scale(0.9, 1);
            transform: scale(0.9, 1);
  }
}

@media screen and (min-width: 768px) {
  .mainBox .circleBox {
    -webkit-transform: scale(1, 1);
            transform: scale(1, 1);
  }
}

@media screen and (min-width: 1024px) {
  .mainBox .circleBox {
    -webkit-transform: scale(1.1, 1.1);
            transform: scale(1.1, 1.1);
  }
}

@-webkit-keyframes Orbita {
  from {
    -webkit-transform: rotate(0deg) translateX(var(--orbit-translate)) rotate(0deg);
            transform: rotate(0deg) translateX(var(--orbit-translate)) rotate(0deg);
  }
  to {
    -webkit-transform: rotate(360deg) translateX(var(--orbit-translate)) rotate(-360deg);
            transform: rotate(360deg) translateX(var(--orbit-translate)) rotate(-360deg);
  }
}

@keyframes Orbita {
  from {
    -webkit-transform: rotate(0deg) translateX(var(--orbit-translate)) rotate(0deg);
            transform: rotate(0deg) translateX(var(--orbit-translate)) rotate(0deg);
  }
  to {
    -webkit-transform: rotate(360deg) translateX(var(--orbit-translate)) rotate(-360deg);
            transform: rotate(360deg) translateX(var(--orbit-translate)) rotate(-360deg);
  }
}

@-webkit-keyframes Orbita2 {
  from {
    -webkit-transform: rotate(180deg) translateX(var(--orbit-translate)) rotate(180deg);
            transform: rotate(180deg) translateX(var(--orbit-translate)) rotate(180deg);
  }
  to {
    -webkit-transform: rotate(540deg) translateX(var(--orbit-translate)) rotate(-180deg);
            transform: rotate(540deg) translateX(var(--orbit-translate)) rotate(-180deg);
  }
}

@keyframes Orbita2 {
  from {
    -webkit-transform: rotate(180deg) translateX(var(--orbit-translate)) rotate(180deg);
            transform: rotate(180deg) translateX(var(--orbit-translate)) rotate(180deg);
  }
  to {
    -webkit-transform: rotate(540deg) translateX(var(--orbit-translate)) rotate(-180deg);
            transform: rotate(540deg) translateX(var(--orbit-translate)) rotate(-180deg);
  }
}

@-webkit-keyframes Orbita3 {
  from {
    -webkit-transform: rotate(90deg) translateX(var(--orbit-translate)) rotate(90deg);
            transform: rotate(90deg) translateX(var(--orbit-translate)) rotate(90deg);
  }
  to {
    -webkit-transform: rotate(450deg) translateX(var(--orbit-translate)) rotate(-270deg);
            transform: rotate(450deg) translateX(var(--orbit-translate)) rotate(-270deg);
  }
}

@keyframes Orbita3 {
  from {
    -webkit-transform: rotate(90deg) translateX(var(--orbit-translate)) rotate(90deg);
            transform: rotate(90deg) translateX(var(--orbit-translate)) rotate(90deg);
  }
  to {
    -webkit-transform: rotate(450deg) translateX(var(--orbit-translate)) rotate(-270deg);
            transform: rotate(450deg) translateX(var(--orbit-translate)) rotate(-270deg);
  }
}
/*# sourceMappingURL=Contacts.module.css.map */